{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tnals\\\\DBTerm\\\\DBTerm\\\\Front\\\\src\\\\flashcard.js\",\n  _s = $RefreshSig$();\n//flashcard.js\nimport React, { useState, useEffect } from 'react';\nimport './vocabulary.css';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flashcard = ({\n  vocabularies,\n  onUpdateVocabulary\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isMeaningVisible, setIsMeaningVisible] = useState(false);\n  const [flashcards, setFlashcards] = useState([]);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [progress, setProgress] = useState('');\n  const [isLastCard, setIsLastCard] = useState(false);\n  const currentVocabId = Number(id);\n\n  // 현재 단어장을 제외한 다른 단어장 목록\n  const availableVocabularies = vocabularies.filter(vocab => vocab.id !== currentVocabId);\n\n  // 현재 단어장에 단어가 있는지 확인\n  const hasWords = flashcards.length > 0;\n  useEffect(() => {\n    const currentVocab = vocabularies.find(vocab => vocab.id === Number(id));\n    if (currentVocab && currentVocab.words) {\n      const cards = currentVocab.words.map(word => ({\n        word: word.word,\n        meanings: word.meanings.split(', ').map(meaning => {\n          const [text, partOfSpeech] = meaning.split(' (');\n          return {\n            text: text,\n            partOfSpeech: partOfSpeech.replace(')', '')\n          };\n        })\n      }));\n      setFlashcards(cards);\n      setTotalQuestions(cards.length);\n    }\n  }, [id, vocabularies]);\n  useEffect(() => {\n    if (totalQuestions > 0) {\n      setProgress(`진행률: ${currentQuestion + 1}/${totalQuestions}`);\n    }\n  }, [currentQuestion, totalQuestions]);\n  useEffect(() => {\n    setIsLastCard(currentQuestion === totalQuestions - 1);\n  }, [currentQuestion, totalQuestions]);\n  const toggleFlashcard = () => {\n    setIsMeaningVisible(!isMeaningVisible);\n  };\n  const handleNextCard = () => {\n    if (isLastCard) {\n      navigate(-1);\n    } else {\n      setCurrentQuestion(Math.min(currentQuestion + 1, flashcards.length - 1));\n      setIsMeaningVisible(false);\n    }\n  };\n  const handlePrevCard = () => {\n    setCurrentQuestion(Math.max(currentQuestion - 1, 0));\n    setIsMeaningVisible(false);\n  };\n  const playAudio = event => {\n    event.stopPropagation();\n  };\n  const addVocab = event => {\n    const selectedVocabId = Number(event.target.value);\n    if (!selectedVocabId) return;\n    const selectedVocab = vocabularies.find(vocab => vocab.id === selectedVocabId);\n    const currentCard = flashcards[currentQuestion];\n\n    // 선택된 단어장에 현재 단어가 이미 있는지 확인\n    const isWordExists = selectedVocab.words.some(word => word.word.toLowerCase() === currentCard.word.toLowerCase());\n    if (isWordExists) {\n      alert('이미 해당 단어장에 존재하는 단어입니다.');\n      event.target.value = ''; // select 초기화\n      return;\n    }\n\n    // 새 단어 추가\n    const newWord = {\n      id: Date.now(),\n      word: currentCard.word,\n      meanings: currentCard.meanings.map(m => `${m.text} (${m.partOfSpeech})`).join(', ')\n    };\n\n    // 단어장 업데이트\n    const updatedVocabularies = vocabularies.map(vocab => vocab.id === selectedVocabId ? {\n      ...vocab,\n      words: [...vocab.words, newWord],\n      wordCount: vocab.wordCount + 1\n    } : vocab);\n\n    // App 컴포넌트의 상태 업데이트를 위해 콜백 호출\n    onUpdateVocabulary(selectedVocabId, updatedVocabularies.find(v => v.id === selectedVocabId).words);\n    alert('단어가 성공적으로 추가되었습니다.');\n    event.target.value = ''; // select 초기화\n  };\n  const handleBackButton = () => {\n    window.history.back();\n  };\n  const currentCard = flashcards[currentQuestion] || {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'TTHakgyoansimEunhasuR',\n      backgroundColor: '#f8f9fa',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      position: 'relative',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '20px',\n        borderBottom: '1px solid #ddd',\n        padding: '10px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '24px',\n          cursor: 'pointer',\n          padding: '10px'\n        },\n        onClick: handleBackButton,\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '18px',\n          color: '#333'\n        },\n        children: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '40px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '500px',\n          height: '300px',\n          backgroundColor: '#fff',\n          borderRadius: '8px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontSize: '24px',\n          textAlign: 'center',\n          position: 'relative',\n          cursor: 'pointer'\n        },\n        onClick: toggleFlashcard,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: isMeaningVisible ? 'none' : 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentCard.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"custom-button\",\n            onClick: playAudio,\n            style: {\n              position: 'absolute',\n              top: '10px',\n              left: '10px'\n            },\n            children: \"\\uB4E3\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: isMeaningVisible ? 'block' : 'none'\n          },\n          children: currentCard.meanings && currentCard.meanings.map((meaning, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [meaning.text, \" (\", meaning.partOfSpeech, \")\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        padding: '20px 0',\n        borderTop: '1px solid #ddd',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-button\",\n        onClick: handlePrevCard,\n        children: \"\\uC774\\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: addVocab,\n        disabled: !hasWords,\n        style: {\n          fontFamily: 'TTHakgyoansimEunhasuR',\n          padding: '8px 12px',\n          border: '1px solid #ddd',\n          borderRadius: '4px',\n          fontSize: '14px',\n          backgroundColor: '#fff',\n          cursor: !hasWords ? 'not-allowed' : 'pointer',\n          opacity: !hasWords ? 0.6 : 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: !hasWords ? \"단어가 없습니다\" : \"단어장에 추가\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), hasWords && availableVocabularies.map(vocab => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: vocab.id,\n          children: vocab.title\n        }, vocab.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-button\",\n        onClick: handleNextCard,\n        style: {\n          ...styles.button,\n          backgroundColor: isLastCard ? '#4CAF50' : undefined\n        },\n        children: isLastCard ? '완료' : '다음'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s(Flashcard, \"d61b1q7wu/rz8XPjzAdP7knsgZE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Flashcard;\nconst styles = {\n  button: {\n    transition: 'background-color 0.3s ease'\n  }\n};\nexport default Flashcard;\nvar _c;\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Flashcard","vocabularies","onUpdateVocabulary","_s","id","navigate","currentQuestion","setCurrentQuestion","isMeaningVisible","setIsMeaningVisible","flashcards","setFlashcards","totalQuestions","setTotalQuestions","progress","setProgress","isLastCard","setIsLastCard","currentVocabId","Number","availableVocabularies","filter","vocab","hasWords","length","currentVocab","find","words","cards","map","word","meanings","split","meaning","text","partOfSpeech","replace","toggleFlashcard","handleNextCard","Math","min","handlePrevCard","max","playAudio","event","stopPropagation","addVocab","selectedVocabId","target","value","selectedVocab","currentCard","isWordExists","some","toLowerCase","alert","newWord","Date","now","m","join","updatedVocabularies","wordCount","v","handleBackButton","window","history","back","style","fontFamily","backgroundColor","display","flexDirection","height","position","padding","children","justifyContent","alignItems","marginBottom","borderBottom","fontSize","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","color","width","flex","borderRadius","boxShadow","textAlign","gap","className","top","left","index","borderTop","onChange","disabled","border","opacity","title","styles","button","undefined","_c","transition","$RefreshReg$"],"sources":["C:/Users/tnals/DBTerm/DBTerm/Front/src/flashcard.js"],"sourcesContent":["//flashcard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './vocabulary.css';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst Flashcard = ({ vocabularies, onUpdateVocabulary }) => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [isMeaningVisible, setIsMeaningVisible] = useState(false);\r\n    const [flashcards, setFlashcards] = useState([]);\r\n    const [totalQuestions, setTotalQuestions] = useState(0);\r\n    const [progress, setProgress] = useState('');\r\n    const [isLastCard, setIsLastCard] = useState(false);\r\n    const currentVocabId = Number(id);\r\n\r\n    // 현재 단어장을 제외한 다른 단어장 목록\r\n    const availableVocabularies = vocabularies.filter(vocab => \r\n        vocab.id !== currentVocabId\r\n    );\r\n\r\n    // 현재 단어장에 단어가 있는지 확인\r\n    const hasWords = flashcards.length > 0;\r\n\r\n    useEffect(() => {\r\n        const currentVocab = vocabularies.find(vocab => vocab.id === Number(id));\r\n        if (currentVocab && currentVocab.words) {\r\n            const cards = currentVocab.words.map(word => ({\r\n                word: word.word,\r\n                meanings: word.meanings.split(', ').map(meaning => {\r\n                    const [text, partOfSpeech] = meaning.split(' (');\r\n                    return {\r\n                        text: text,\r\n                        partOfSpeech: partOfSpeech.replace(')', '')\r\n                    };\r\n                })\r\n            }));\r\n            setFlashcards(cards);\r\n            setTotalQuestions(cards.length);\r\n        }\r\n    }, [id, vocabularies]);\r\n\r\n    useEffect(() => {\r\n        if (totalQuestions > 0) {\r\n            setProgress(`진행률: ${currentQuestion + 1}/${totalQuestions}`);\r\n        }\r\n    }, [currentQuestion, totalQuestions]);\r\n\r\n    useEffect(() => {\r\n        setIsLastCard(currentQuestion === totalQuestions - 1);\r\n    }, [currentQuestion, totalQuestions]);\r\n\r\n    const toggleFlashcard = () => {\r\n        setIsMeaningVisible(!isMeaningVisible);\r\n    };\r\n\r\n    const handleNextCard = () => {\r\n        if (isLastCard) {\r\n            navigate(-1);\r\n        } else {\r\n            setCurrentQuestion(Math.min(currentQuestion + 1, flashcards.length - 1));\r\n            setIsMeaningVisible(false);\r\n        }\r\n    };\r\n\r\n    const handlePrevCard = () => {\r\n        setCurrentQuestion(Math.max(currentQuestion - 1, 0));\r\n        setIsMeaningVisible(false);\r\n    };\r\n\r\n    const playAudio = (event) => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const addVocab = (event) => {\r\n        const selectedVocabId = Number(event.target.value);\r\n        if (!selectedVocabId) return;\r\n\r\n        const selectedVocab = vocabularies.find(vocab => vocab.id === selectedVocabId);\r\n        const currentCard = flashcards[currentQuestion];\r\n\r\n        // 선택된 단어장에 현재 단어가 이미 있는지 확인\r\n        const isWordExists = selectedVocab.words.some(\r\n            word => word.word.toLowerCase() === currentCard.word.toLowerCase()\r\n        );\r\n\r\n        if (isWordExists) {\r\n            alert('이미 해당 단어장에 존재하는 단어입니다.');\r\n            event.target.value = ''; // select 초기화\r\n            return;\r\n        }\r\n\r\n        // 새 단어 추가\r\n        const newWord = {\r\n            id: Date.now(),\r\n            word: currentCard.word,\r\n            meanings: currentCard.meanings.map(m => `${m.text} (${m.partOfSpeech})`).join(', ')\r\n        };\r\n\r\n        // 단어장 업데이트\r\n        const updatedVocabularies = vocabularies.map(vocab => \r\n            vocab.id === selectedVocabId\r\n                ? {\r\n                    ...vocab,\r\n                    words: [...vocab.words, newWord],\r\n                    wordCount: vocab.wordCount + 1\r\n                  }\r\n                : vocab\r\n        );\r\n\r\n        // App 컴포넌트의 상태 업데이트를 위해 콜백 호출\r\n        onUpdateVocabulary(selectedVocabId, updatedVocabularies.find(v => v.id === selectedVocabId).words);\r\n        \r\n        alert('단어가 성공적으로 추가되었습니다.');\r\n        event.target.value = ''; // select 초기화\r\n    };\r\n\r\n    const handleBackButton = () => {\r\n        window.history.back();\r\n    };\r\n\r\n    const currentCard = flashcards[currentQuestion] || {};\r\n\r\n    return (\r\n        <div style={{\r\n            fontFamily: 'TTHakgyoansimEunhasuR',\r\n            backgroundColor: '#f8f9fa',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: '100vh',\r\n            position: 'relative',\r\n            padding: '20px'\r\n        }}>\r\n            <header style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                marginBottom: '20px',\r\n                borderBottom: '1px solid #ddd',\r\n                padding: '10px 0'\r\n            }}>\r\n                <div \r\n                    style={{\r\n                        fontSize: '24px',\r\n                        cursor: 'pointer',\r\n                        padding: '10px'\r\n                    }}\r\n                    onClick={handleBackButton}\r\n                >\r\n                    ←\r\n                </div>\r\n                <p style={{\r\n                    fontSize: '18px',\r\n                    color: '#333'\r\n                }}>{progress}</p>\r\n                <div style={{ width: '40px' }}></div>\r\n            </header>\r\n\r\n            <main style={{\r\n                flex: 1,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n            }}>\r\n                <div style={{\r\n                    width: '500px',\r\n                    height: '300px',\r\n                    backgroundColor: '#fff',\r\n                    borderRadius: '8px',\r\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    fontSize: '24px',\r\n                    textAlign: 'center',\r\n                    position: 'relative',\r\n                    cursor: 'pointer'\r\n                }} onClick={toggleFlashcard}>\r\n                    <div style={{\r\n                        display: isMeaningVisible ? 'none' : 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        gap: '20px'\r\n                    }}>\r\n                        <p>{currentCard.word}</p>\r\n                        <button \r\n                            className=\"custom-button\"\r\n                            onClick={playAudio}\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: '10px',\r\n                                left: '10px'\r\n                            }}\r\n                        >\r\n                            듣기\r\n                        </button>\r\n                    </div>\r\n                    <div style={{\r\n                        display: isMeaningVisible ? 'block' : 'none'\r\n                    }}>\r\n                        {currentCard.meanings && currentCard.meanings.map((meaning, index) => (\r\n                            <p key={index}>\r\n                                {meaning.text} ({meaning.partOfSpeech})\r\n                            </p>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </main>\r\n\r\n            <footer style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-around',\r\n                alignItems: 'center',\r\n                padding: '20px 0',\r\n                borderTop: '1px solid #ddd',\r\n                gap: '10px'\r\n            }}>\r\n                <button \r\n                    className=\"custom-button\"\r\n                    onClick={handlePrevCard}\r\n                >\r\n                    이전\r\n                </button>\r\n                <select \r\n                    onChange={addVocab} \r\n                    disabled={!hasWords}\r\n                    style={{\r\n                        fontFamily: 'TTHakgyoansimEunhasuR',\r\n                        padding: '8px 12px',\r\n                        border: '1px solid #ddd',\r\n                        borderRadius: '4px',\r\n                        fontSize: '14px',\r\n                        backgroundColor: '#fff',\r\n                        cursor: !hasWords ? 'not-allowed' : 'pointer',\r\n                        opacity: !hasWords ? 0.6 : 1\r\n                    }}\r\n                >\r\n                    <option value=\"\">\r\n                        {!hasWords \r\n                            ? \"단어가 없습니다\" \r\n                            : \"단어장에 추가\"}\r\n                    </option>\r\n                    {hasWords && availableVocabularies.map(vocab => (\r\n                        <option key={vocab.id} value={vocab.id}>\r\n                            {vocab.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <button \r\n                    className=\"custom-button\"\r\n                    onClick={handleNextCard}\r\n                    style={{\r\n                        ...styles.button,\r\n                        backgroundColor: isLastCard ? '#4CAF50' : undefined\r\n                    }}\r\n                >\r\n                    {isLastCard ? '완료' : '다음'}\r\n                </button>\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    button: {\r\n        transition: 'background-color 0.3s ease'\r\n    }\r\n};\r\n\r\nexport default Flashcard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}